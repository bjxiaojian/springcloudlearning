spring:
  application:
    name: microservice-consumer
server:
  port: 8010
user: 
  userServicePath: http://localhost:7900/user/
eureka:
  client:
    healthcheck:
      enabled: true
    serviceUrl:
      #defaultZone: http://user:password@localhost:8761/eureka
      defaultZone: http://root:123456@localhost:8761/eureka
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ipAddress}:${spring.application.instance_id:${server.port}}
    metadata-map:
      zone: ABC      # eureka可以理解的元数据,会影响客户端行为
      bjxiaojian: bjxiaojian  # eureka不能理解的元数据,不会影响客户端行为
    lease-renewal-interval-in-seconds: 5
logging:
  level:
    com.itmuch.cloud.feign.UserFeignClient: DEBUG

# 解决feign第一次请求报超时异常的方案：
# hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 5000
# 或者：
# hystrix.command.default.execution.timeout.enabled: false
# 或者：禁用feign的hystrix支持
feign.hystrix.enabled: false



# 1.在配置中使用RibbonClirnt，优先级高于代码中使用的RibbonClient。效果等同于@RibbonClient(name = "microservice-provider", configuration = TestConfiguration.class)
#microservice-provider:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule

# 2.只使用ribbon而不使用eureka时的配置。此时只会访问7900上的provider微服务。
#ribbon:
#  eureka:
#   enabled: false
#microservice-provider:
#  ribbon:
#    listOfServers: localhost:7900